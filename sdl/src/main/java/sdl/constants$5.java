// Generated by jextract

package sdl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$5 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$5() {}
    static final MethodHandle const$0 = RuntimeHelper.upcallHandle(SDL_SetMemoryFunctions$calloc_func.class, "apply", constants$0.const$4);
    static final MethodHandle const$1 = RuntimeHelper.upcallHandle(SDL_SetMemoryFunctions$realloc_func.class, "apply", constants$1.const$0);
    static final MethodHandle const$2 = RuntimeHelper.upcallHandle(SDL_SetMemoryFunctions$free_func.class, "apply", constants$1.const$2);
    static final FunctionDescriptor const$3 = FunctionDescriptor.of(JAVA_INT,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(
        "SDL_SetMemoryFunctions",
        constants$5.const$3
    );
    static final FunctionDescriptor const$5 = FunctionDescriptor.of(JAVA_INT);
    static final MethodHandle const$6 = RuntimeHelper.downcallHandle(
        "SDL_GetNumAllocations",
        constants$5.const$5
    );
}


