// Generated by jextract

package sdl.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class sdl_h_1 {

    public static MethodHandle SDL_FlushEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$161.const$2,"SDL_FlushEvent");
    }
    /**
     * {@snippet :
     * void SDL_FlushEvent(unsigned int type);
     * }
     */
    public static void SDL_FlushEvent(int type) {
        var mh$ = SDL_FlushEvent$MH();
        try {
            mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_FlushEvents$MH() {
        return RuntimeHelper.requireNonNull(constants$161.const$4,"SDL_FlushEvents");
    }
    /**
     * {@snippet :
     * void SDL_FlushEvents(unsigned int minType, unsigned int maxType);
     * }
     */
    public static void SDL_FlushEvents(int minType, int maxType) {
        var mh$ = SDL_FlushEvents$MH();
        try {
            mh$.invokeExact(minType, maxType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_PollEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$161.const$5,"SDL_PollEvent");
    }
    /**
     * {@snippet :
     * int SDL_PollEvent(union SDL_Event* event);
     * }
     */
    public static int SDL_PollEvent(MemorySegment event) {
        var mh$ = SDL_PollEvent$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_WaitEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$162.const$0,"SDL_WaitEvent");
    }
    /**
     * {@snippet :
     * int SDL_WaitEvent(union SDL_Event* event);
     * }
     */
    public static int SDL_WaitEvent(MemorySegment event) {
        var mh$ = SDL_WaitEvent$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_WaitEventTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$162.const$1,"SDL_WaitEventTimeout");
    }
    /**
     * {@snippet :
     * int SDL_WaitEventTimeout(union SDL_Event* event, int timeout);
     * }
     */
    public static int SDL_WaitEventTimeout(MemorySegment event, int timeout) {
        var mh$ = SDL_WaitEventTimeout$MH();
        try {
            return (int)mh$.invokeExact(event, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_PushEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$162.const$2,"SDL_PushEvent");
    }
    /**
     * {@snippet :
     * int SDL_PushEvent(union SDL_Event* event);
     * }
     */
    public static int SDL_PushEvent(MemorySegment event) {
        var mh$ = SDL_PushEvent$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetEventFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$162.const$5,"SDL_SetEventFilter");
    }
    /**
     * {@snippet :
     * void SDL_SetEventFilter(int (*filter)(void*,union SDL_Event*), void* userdata);
     * }
     */
    public static void SDL_SetEventFilter(MemorySegment filter, MemorySegment userdata) {
        var mh$ = SDL_SetEventFilter$MH();
        try {
            mh$.invokeExact(filter, userdata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetEventFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$163.const$1,"SDL_GetEventFilter");
    }
    /**
     * {@snippet :
     * enum SDL_bool SDL_GetEventFilter(int (**filter)(void*,union SDL_Event*), void** userdata);
     * }
     */
    public static int SDL_GetEventFilter(MemorySegment filter, MemorySegment userdata) {
        var mh$ = SDL_GetEventFilter$MH();
        try {
            return (int)mh$.invokeExact(filter, userdata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_AddEventWatch$MH() {
        return RuntimeHelper.requireNonNull(constants$163.const$3,"SDL_AddEventWatch");
    }
    /**
     * {@snippet :
     * void SDL_AddEventWatch(int (*filter)(void*,union SDL_Event*), void* userdata);
     * }
     */
    public static void SDL_AddEventWatch(MemorySegment filter, MemorySegment userdata) {
        var mh$ = SDL_AddEventWatch$MH();
        try {
            mh$.invokeExact(filter, userdata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_DelEventWatch$MH() {
        return RuntimeHelper.requireNonNull(constants$163.const$5,"SDL_DelEventWatch");
    }
    /**
     * {@snippet :
     * void SDL_DelEventWatch(int (*filter)(void*,union SDL_Event*), void* userdata);
     * }
     */
    public static void SDL_DelEventWatch(MemorySegment filter, MemorySegment userdata) {
        var mh$ = SDL_DelEventWatch$MH();
        try {
            mh$.invokeExact(filter, userdata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_FilterEvents$MH() {
        return RuntimeHelper.requireNonNull(constants$164.const$1,"SDL_FilterEvents");
    }
    /**
     * {@snippet :
     * void SDL_FilterEvents(int (*filter)(void*,union SDL_Event*), void* userdata);
     * }
     */
    public static void SDL_FilterEvents(MemorySegment filter, MemorySegment userdata) {
        var mh$ = SDL_FilterEvents$MH();
        try {
            mh$.invokeExact(filter, userdata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_EventState$MH() {
        return RuntimeHelper.requireNonNull(constants$164.const$3,"SDL_EventState");
    }
    /**
     * {@snippet :
     * unsigned char SDL_EventState(unsigned int type, int state);
     * }
     */
    public static byte SDL_EventState(int type, int state) {
        var mh$ = SDL_EventState$MH();
        try {
            return (byte)mh$.invokeExact(type, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RegisterEvents$MH() {
        return RuntimeHelper.requireNonNull(constants$164.const$4,"SDL_RegisterEvents");
    }
    /**
     * {@snippet :
     * unsigned int SDL_RegisterEvents(int numevents);
     * }
     */
    public static int SDL_RegisterEvents(int numevents) {
        var mh$ = SDL_RegisterEvents$MH();
        try {
            return (int)mh$.invokeExact(numevents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum SDL_HintPriority.SDL_HINT_DEFAULT = 0;
     * }
     */
    public static int SDL_HINT_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum SDL_HintPriority.SDL_HINT_NORMAL = 1;
     * }
     */
    public static int SDL_HINT_NORMAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum SDL_HintPriority.SDL_HINT_OVERRIDE = 2;
     * }
     */
    public static int SDL_HINT_OVERRIDE() {
        return (int)2L;
    }
    public static MethodHandle SDL_SetHintWithPriority$MH() {
        return RuntimeHelper.requireNonNull(constants$164.const$5,"SDL_SetHintWithPriority");
    }
    /**
     * {@snippet :
     * enum SDL_bool SDL_SetHintWithPriority(char* name, char* value, enum SDL_HintPriority priority);
     * }
     */
    public static int SDL_SetHintWithPriority(MemorySegment name, MemorySegment value, int priority) {
        var mh$ = SDL_SetHintWithPriority$MH();
        try {
            return (int)mh$.invokeExact(name, value, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetHint$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$0,"SDL_SetHint");
    }
    /**
     * {@snippet :
     * enum SDL_bool SDL_SetHint(char* name, char* value);
     * }
     */
    public static int SDL_SetHint(MemorySegment name, MemorySegment value) {
        var mh$ = SDL_SetHint$MH();
        try {
            return (int)mh$.invokeExact(name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_ResetHint$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$1,"SDL_ResetHint");
    }
    /**
     * {@snippet :
     * enum SDL_bool SDL_ResetHint(char* name);
     * }
     */
    public static int SDL_ResetHint(MemorySegment name) {
        var mh$ = SDL_ResetHint$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_ResetHints$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$2,"SDL_ResetHints");
    }
    /**
     * {@snippet :
     * void SDL_ResetHints();
     * }
     */
    public static void SDL_ResetHints() {
        var mh$ = SDL_ResetHints$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetHint$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$3,"SDL_GetHint");
    }
    /**
     * {@snippet :
     * char* SDL_GetHint(char* name);
     * }
     */
    public static MemorySegment SDL_GetHint(MemorySegment name) {
        var mh$ = SDL_GetHint$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetHintBoolean$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$4,"SDL_GetHintBoolean");
    }
    /**
     * {@snippet :
     * enum SDL_bool SDL_GetHintBoolean(char* name, enum SDL_bool default_value);
     * }
     */
    public static int SDL_GetHintBoolean(MemorySegment name, int default_value) {
        var mh$ = SDL_GetHintBoolean$MH();
        try {
            return (int)mh$.invokeExact(name, default_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_AddHintCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$166.const$2,"SDL_AddHintCallback");
    }
    /**
     * {@snippet :
     * void SDL_AddHintCallback(char* name, void (*callback)(void*,char*,char*,char*), void* userdata);
     * }
     */
    public static void SDL_AddHintCallback(MemorySegment name, MemorySegment callback, MemorySegment userdata) {
        var mh$ = SDL_AddHintCallback$MH();
        try {
            mh$.invokeExact(name, callback, userdata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_DelHintCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$166.const$4,"SDL_DelHintCallback");
    }
    /**
     * {@snippet :
     * void SDL_DelHintCallback(char* name, void (*callback)(void*,char*,char*,char*), void* userdata);
     * }
     */
    public static void SDL_DelHintCallback(MemorySegment name, MemorySegment callback, MemorySegment userdata) {
        var mh$ = SDL_DelHintCallback$MH();
        try {
            mh$.invokeExact(name, callback, userdata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_ClearHints$MH() {
        return RuntimeHelper.requireNonNull(constants$166.const$5,"SDL_ClearHints");
    }
    /**
     * {@snippet :
     * void SDL_ClearHints();
     * }
     */
    public static void SDL_ClearHints() {
        var mh$ = SDL_ClearHints$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum SDL_RendererFlags.SDL_RENDERER_SOFTWARE = 1;
     * }
     */
    public static int SDL_RENDERER_SOFTWARE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum SDL_RendererFlags.SDL_RENDERER_ACCELERATED = 2;
     * }
     */
    public static int SDL_RENDERER_ACCELERATED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum SDL_RendererFlags.SDL_RENDERER_PRESENTVSYNC = 4;
     * }
     */
    public static int SDL_RENDERER_PRESENTVSYNC() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum SDL_RendererFlags.SDL_RENDERER_TARGETTEXTURE = 8;
     * }
     */
    public static int SDL_RENDERER_TARGETTEXTURE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum SDL_ScaleMode.SDL_ScaleModeNearest = 0;
     * }
     */
    public static int SDL_ScaleModeNearest() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum SDL_ScaleMode.SDL_ScaleModeLinear = 1;
     * }
     */
    public static int SDL_ScaleModeLinear() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum SDL_ScaleMode.SDL_ScaleModeBest = 2;
     * }
     */
    public static int SDL_ScaleModeBest() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum SDL_TextureAccess.SDL_TEXTUREACCESS_STATIC = 0;
     * }
     */
    public static int SDL_TEXTUREACCESS_STATIC() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum SDL_TextureAccess.SDL_TEXTUREACCESS_STREAMING = 1;
     * }
     */
    public static int SDL_TEXTUREACCESS_STREAMING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum SDL_TextureAccess.SDL_TEXTUREACCESS_TARGET = 2;
     * }
     */
    public static int SDL_TEXTUREACCESS_TARGET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum SDL_TextureModulate.SDL_TEXTUREMODULATE_NONE = 0;
     * }
     */
    public static int SDL_TEXTUREMODULATE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum SDL_TextureModulate.SDL_TEXTUREMODULATE_COLOR = 1;
     * }
     */
    public static int SDL_TEXTUREMODULATE_COLOR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum SDL_TextureModulate.SDL_TEXTUREMODULATE_ALPHA = 2;
     * }
     */
    public static int SDL_TEXTUREMODULATE_ALPHA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum SDL_RendererFlip.SDL_FLIP_NONE = 0;
     * }
     */
    public static int SDL_FLIP_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum SDL_RendererFlip.SDL_FLIP_HORIZONTAL = 1;
     * }
     */
    public static int SDL_FLIP_HORIZONTAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum SDL_RendererFlip.SDL_FLIP_VERTICAL = 2;
     * }
     */
    public static int SDL_FLIP_VERTICAL() {
        return (int)2L;
    }
    public static MethodHandle SDL_GetNumRenderDrivers$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$1,"SDL_GetNumRenderDrivers");
    }
    /**
     * {@snippet :
     * int SDL_GetNumRenderDrivers();
     * }
     */
    public static int SDL_GetNumRenderDrivers() {
        var mh$ = SDL_GetNumRenderDrivers$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetRenderDriverInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$2,"SDL_GetRenderDriverInfo");
    }
    /**
     * {@snippet :
     * int SDL_GetRenderDriverInfo(int index, struct SDL_RendererInfo* info);
     * }
     */
    public static int SDL_GetRenderDriverInfo(int index, MemorySegment info) {
        var mh$ = SDL_GetRenderDriverInfo$MH();
        try {
            return (int)mh$.invokeExact(index, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_CreateWindowAndRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$4,"SDL_CreateWindowAndRenderer");
    }
    /**
     * {@snippet :
     * int SDL_CreateWindowAndRenderer(int width, int height, unsigned int window_flags, struct SDL_Window** window, struct SDL_Renderer** renderer);
     * }
     */
    public static int SDL_CreateWindowAndRenderer(int width, int height, int window_flags, MemorySegment window, MemorySegment renderer) {
        var mh$ = SDL_CreateWindowAndRenderer$MH();
        try {
            return (int)mh$.invokeExact(width, height, window_flags, window, renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_CreateRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$5,"SDL_CreateRenderer");
    }
    /**
     * {@snippet :
     * struct SDL_Renderer* SDL_CreateRenderer(struct SDL_Window* window, int index, unsigned int flags);
     * }
     */
    public static MemorySegment SDL_CreateRenderer(MemorySegment window, int index, int flags) {
        var mh$ = SDL_CreateRenderer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, index, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_CreateSoftwareRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$169.const$0,"SDL_CreateSoftwareRenderer");
    }
    /**
     * {@snippet :
     * struct SDL_Renderer* SDL_CreateSoftwareRenderer(struct SDL_Surface* surface);
     * }
     */
    public static MemorySegment SDL_CreateSoftwareRenderer(MemorySegment surface) {
        var mh$ = SDL_CreateSoftwareRenderer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$169.const$1,"SDL_GetRenderer");
    }
    /**
     * {@snippet :
     * struct SDL_Renderer* SDL_GetRenderer(struct SDL_Window* window);
     * }
     */
    public static MemorySegment SDL_GetRenderer(MemorySegment window) {
        var mh$ = SDL_GetRenderer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGetWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$169.const$2,"SDL_RenderGetWindow");
    }
    /**
     * {@snippet :
     * struct SDL_Window* SDL_RenderGetWindow(struct SDL_Renderer* renderer);
     * }
     */
    public static MemorySegment SDL_RenderGetWindow(MemorySegment renderer) {
        var mh$ = SDL_RenderGetWindow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetRendererInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$169.const$3,"SDL_GetRendererInfo");
    }
    /**
     * {@snippet :
     * int SDL_GetRendererInfo(struct SDL_Renderer* renderer, struct SDL_RendererInfo* info);
     * }
     */
    public static int SDL_GetRendererInfo(MemorySegment renderer, MemorySegment info) {
        var mh$ = SDL_GetRendererInfo$MH();
        try {
            return (int)mh$.invokeExact(renderer, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetRendererOutputSize$MH() {
        return RuntimeHelper.requireNonNull(constants$169.const$4,"SDL_GetRendererOutputSize");
    }
    /**
     * {@snippet :
     * int SDL_GetRendererOutputSize(struct SDL_Renderer* renderer, int* w, int* h);
     * }
     */
    public static int SDL_GetRendererOutputSize(MemorySegment renderer, MemorySegment w, MemorySegment h) {
        var mh$ = SDL_GetRendererOutputSize$MH();
        try {
            return (int)mh$.invokeExact(renderer, w, h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_CreateTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$169.const$6,"SDL_CreateTexture");
    }
    /**
     * {@snippet :
     * struct SDL_Texture* SDL_CreateTexture(struct SDL_Renderer* renderer, unsigned int format, int access, int w, int h);
     * }
     */
    public static MemorySegment SDL_CreateTexture(MemorySegment renderer, int format, int access, int w, int h) {
        var mh$ = SDL_CreateTexture$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer, format, access, w, h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_CreateTextureFromSurface$MH() {
        return RuntimeHelper.requireNonNull(constants$170.const$0,"SDL_CreateTextureFromSurface");
    }
    /**
     * {@snippet :
     * struct SDL_Texture* SDL_CreateTextureFromSurface(struct SDL_Renderer* renderer, struct SDL_Surface* surface);
     * }
     */
    public static MemorySegment SDL_CreateTextureFromSurface(MemorySegment renderer, MemorySegment surface) {
        var mh$ = SDL_CreateTextureFromSurface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_QueryTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$170.const$1,"SDL_QueryTexture");
    }
    /**
     * {@snippet :
     * int SDL_QueryTexture(struct SDL_Texture* texture, unsigned int* format, int* access, int* w, int* h);
     * }
     */
    public static int SDL_QueryTexture(MemorySegment texture, MemorySegment format, MemorySegment access, MemorySegment w, MemorySegment h) {
        var mh$ = SDL_QueryTexture$MH();
        try {
            return (int)mh$.invokeExact(texture, format, access, w, h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetTextureColorMod$MH() {
        return RuntimeHelper.requireNonNull(constants$170.const$2,"SDL_SetTextureColorMod");
    }
    /**
     * {@snippet :
     * int SDL_SetTextureColorMod(struct SDL_Texture* texture, unsigned char r, unsigned char g, unsigned char b);
     * }
     */
    public static int SDL_SetTextureColorMod(MemorySegment texture, byte r, byte g, byte b) {
        var mh$ = SDL_SetTextureColorMod$MH();
        try {
            return (int)mh$.invokeExact(texture, r, g, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetTextureColorMod$MH() {
        return RuntimeHelper.requireNonNull(constants$170.const$3,"SDL_GetTextureColorMod");
    }
    /**
     * {@snippet :
     * int SDL_GetTextureColorMod(struct SDL_Texture* texture, unsigned char* r, unsigned char* g, unsigned char* b);
     * }
     */
    public static int SDL_GetTextureColorMod(MemorySegment texture, MemorySegment r, MemorySegment g, MemorySegment b) {
        var mh$ = SDL_GetTextureColorMod$MH();
        try {
            return (int)mh$.invokeExact(texture, r, g, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetTextureAlphaMod$MH() {
        return RuntimeHelper.requireNonNull(constants$170.const$4,"SDL_SetTextureAlphaMod");
    }
    /**
     * {@snippet :
     * int SDL_SetTextureAlphaMod(struct SDL_Texture* texture, unsigned char alpha);
     * }
     */
    public static int SDL_SetTextureAlphaMod(MemorySegment texture, byte alpha) {
        var mh$ = SDL_SetTextureAlphaMod$MH();
        try {
            return (int)mh$.invokeExact(texture, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetTextureAlphaMod$MH() {
        return RuntimeHelper.requireNonNull(constants$170.const$5,"SDL_GetTextureAlphaMod");
    }
    /**
     * {@snippet :
     * int SDL_GetTextureAlphaMod(struct SDL_Texture* texture, unsigned char* alpha);
     * }
     */
    public static int SDL_GetTextureAlphaMod(MemorySegment texture, MemorySegment alpha) {
        var mh$ = SDL_GetTextureAlphaMod$MH();
        try {
            return (int)mh$.invokeExact(texture, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetTextureBlendMode$MH() {
        return RuntimeHelper.requireNonNull(constants$171.const$0,"SDL_SetTextureBlendMode");
    }
    /**
     * {@snippet :
     * int SDL_SetTextureBlendMode(struct SDL_Texture* texture, enum SDL_BlendMode blendMode);
     * }
     */
    public static int SDL_SetTextureBlendMode(MemorySegment texture, int blendMode) {
        var mh$ = SDL_SetTextureBlendMode$MH();
        try {
            return (int)mh$.invokeExact(texture, blendMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetTextureBlendMode$MH() {
        return RuntimeHelper.requireNonNull(constants$171.const$1,"SDL_GetTextureBlendMode");
    }
    /**
     * {@snippet :
     * int SDL_GetTextureBlendMode(struct SDL_Texture* texture, enum SDL_BlendMode* blendMode);
     * }
     */
    public static int SDL_GetTextureBlendMode(MemorySegment texture, MemorySegment blendMode) {
        var mh$ = SDL_GetTextureBlendMode$MH();
        try {
            return (int)mh$.invokeExact(texture, blendMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetTextureScaleMode$MH() {
        return RuntimeHelper.requireNonNull(constants$171.const$2,"SDL_SetTextureScaleMode");
    }
    /**
     * {@snippet :
     * int SDL_SetTextureScaleMode(struct SDL_Texture* texture, enum SDL_ScaleMode scaleMode);
     * }
     */
    public static int SDL_SetTextureScaleMode(MemorySegment texture, int scaleMode) {
        var mh$ = SDL_SetTextureScaleMode$MH();
        try {
            return (int)mh$.invokeExact(texture, scaleMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetTextureScaleMode$MH() {
        return RuntimeHelper.requireNonNull(constants$171.const$3,"SDL_GetTextureScaleMode");
    }
    /**
     * {@snippet :
     * int SDL_GetTextureScaleMode(struct SDL_Texture* texture, enum SDL_ScaleMode* scaleMode);
     * }
     */
    public static int SDL_GetTextureScaleMode(MemorySegment texture, MemorySegment scaleMode) {
        var mh$ = SDL_GetTextureScaleMode$MH();
        try {
            return (int)mh$.invokeExact(texture, scaleMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetTextureUserData$MH() {
        return RuntimeHelper.requireNonNull(constants$171.const$4,"SDL_SetTextureUserData");
    }
    /**
     * {@snippet :
     * int SDL_SetTextureUserData(struct SDL_Texture* texture, void* userdata);
     * }
     */
    public static int SDL_SetTextureUserData(MemorySegment texture, MemorySegment userdata) {
        var mh$ = SDL_SetTextureUserData$MH();
        try {
            return (int)mh$.invokeExact(texture, userdata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetTextureUserData$MH() {
        return RuntimeHelper.requireNonNull(constants$171.const$5,"SDL_GetTextureUserData");
    }
    /**
     * {@snippet :
     * void* SDL_GetTextureUserData(struct SDL_Texture* texture);
     * }
     */
    public static MemorySegment SDL_GetTextureUserData(MemorySegment texture) {
        var mh$ = SDL_GetTextureUserData$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(texture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_UpdateTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$172.const$0,"SDL_UpdateTexture");
    }
    /**
     * {@snippet :
     * int SDL_UpdateTexture(struct SDL_Texture* texture, struct SDL_Rect* rect, void* pixels, int pitch);
     * }
     */
    public static int SDL_UpdateTexture(MemorySegment texture, MemorySegment rect, MemorySegment pixels, int pitch) {
        var mh$ = SDL_UpdateTexture$MH();
        try {
            return (int)mh$.invokeExact(texture, rect, pixels, pitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_UpdateYUVTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$172.const$2,"SDL_UpdateYUVTexture");
    }
    /**
     * {@snippet :
     * int SDL_UpdateYUVTexture(struct SDL_Texture* texture, struct SDL_Rect* rect, unsigned char* Yplane, int Ypitch, unsigned char* Uplane, int Upitch, unsigned char* Vplane, int Vpitch);
     * }
     */
    public static int SDL_UpdateYUVTexture(MemorySegment texture, MemorySegment rect, MemorySegment Yplane, int Ypitch, MemorySegment Uplane, int Upitch, MemorySegment Vplane, int Vpitch) {
        var mh$ = SDL_UpdateYUVTexture$MH();
        try {
            return (int)mh$.invokeExact(texture, rect, Yplane, Ypitch, Uplane, Upitch, Vplane, Vpitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_UpdateNVTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$172.const$4,"SDL_UpdateNVTexture");
    }
    /**
     * {@snippet :
     * int SDL_UpdateNVTexture(struct SDL_Texture* texture, struct SDL_Rect* rect, unsigned char* Yplane, int Ypitch, unsigned char* UVplane, int UVpitch);
     * }
     */
    public static int SDL_UpdateNVTexture(MemorySegment texture, MemorySegment rect, MemorySegment Yplane, int Ypitch, MemorySegment UVplane, int UVpitch) {
        var mh$ = SDL_UpdateNVTexture$MH();
        try {
            return (int)mh$.invokeExact(texture, rect, Yplane, Ypitch, UVplane, UVpitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_LockTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$172.const$5,"SDL_LockTexture");
    }
    /**
     * {@snippet :
     * int SDL_LockTexture(struct SDL_Texture* texture, struct SDL_Rect* rect, void** pixels, int* pitch);
     * }
     */
    public static int SDL_LockTexture(MemorySegment texture, MemorySegment rect, MemorySegment pixels, MemorySegment pitch) {
        var mh$ = SDL_LockTexture$MH();
        try {
            return (int)mh$.invokeExact(texture, rect, pixels, pitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_LockTextureToSurface$MH() {
        return RuntimeHelper.requireNonNull(constants$173.const$0,"SDL_LockTextureToSurface");
    }
    /**
     * {@snippet :
     * int SDL_LockTextureToSurface(struct SDL_Texture* texture, struct SDL_Rect* rect, struct SDL_Surface** surface);
     * }
     */
    public static int SDL_LockTextureToSurface(MemorySegment texture, MemorySegment rect, MemorySegment surface) {
        var mh$ = SDL_LockTextureToSurface$MH();
        try {
            return (int)mh$.invokeExact(texture, rect, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_UnlockTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$173.const$1,"SDL_UnlockTexture");
    }
    /**
     * {@snippet :
     * void SDL_UnlockTexture(struct SDL_Texture* texture);
     * }
     */
    public static void SDL_UnlockTexture(MemorySegment texture) {
        var mh$ = SDL_UnlockTexture$MH();
        try {
            mh$.invokeExact(texture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderTargetSupported$MH() {
        return RuntimeHelper.requireNonNull(constants$173.const$2,"SDL_RenderTargetSupported");
    }
    /**
     * {@snippet :
     * enum SDL_bool SDL_RenderTargetSupported(struct SDL_Renderer* renderer);
     * }
     */
    public static int SDL_RenderTargetSupported(MemorySegment renderer) {
        var mh$ = SDL_RenderTargetSupported$MH();
        try {
            return (int)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetRenderTarget$MH() {
        return RuntimeHelper.requireNonNull(constants$173.const$3,"SDL_SetRenderTarget");
    }
    /**
     * {@snippet :
     * int SDL_SetRenderTarget(struct SDL_Renderer* renderer, struct SDL_Texture* texture);
     * }
     */
    public static int SDL_SetRenderTarget(MemorySegment renderer, MemorySegment texture) {
        var mh$ = SDL_SetRenderTarget$MH();
        try {
            return (int)mh$.invokeExact(renderer, texture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetRenderTarget$MH() {
        return RuntimeHelper.requireNonNull(constants$173.const$4,"SDL_GetRenderTarget");
    }
    /**
     * {@snippet :
     * struct SDL_Texture* SDL_GetRenderTarget(struct SDL_Renderer* renderer);
     * }
     */
    public static MemorySegment SDL_GetRenderTarget(MemorySegment renderer) {
        var mh$ = SDL_GetRenderTarget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderSetLogicalSize$MH() {
        return RuntimeHelper.requireNonNull(constants$173.const$5,"SDL_RenderSetLogicalSize");
    }
    /**
     * {@snippet :
     * int SDL_RenderSetLogicalSize(struct SDL_Renderer* renderer, int w, int h);
     * }
     */
    public static int SDL_RenderSetLogicalSize(MemorySegment renderer, int w, int h) {
        var mh$ = SDL_RenderSetLogicalSize$MH();
        try {
            return (int)mh$.invokeExact(renderer, w, h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGetLogicalSize$MH() {
        return RuntimeHelper.requireNonNull(constants$174.const$0,"SDL_RenderGetLogicalSize");
    }
    /**
     * {@snippet :
     * void SDL_RenderGetLogicalSize(struct SDL_Renderer* renderer, int* w, int* h);
     * }
     */
    public static void SDL_RenderGetLogicalSize(MemorySegment renderer, MemorySegment w, MemorySegment h) {
        var mh$ = SDL_RenderGetLogicalSize$MH();
        try {
            mh$.invokeExact(renderer, w, h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderSetIntegerScale$MH() {
        return RuntimeHelper.requireNonNull(constants$174.const$1,"SDL_RenderSetIntegerScale");
    }
    /**
     * {@snippet :
     * int SDL_RenderSetIntegerScale(struct SDL_Renderer* renderer, enum SDL_bool enable);
     * }
     */
    public static int SDL_RenderSetIntegerScale(MemorySegment renderer, int enable) {
        var mh$ = SDL_RenderSetIntegerScale$MH();
        try {
            return (int)mh$.invokeExact(renderer, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGetIntegerScale$MH() {
        return RuntimeHelper.requireNonNull(constants$174.const$2,"SDL_RenderGetIntegerScale");
    }
    /**
     * {@snippet :
     * enum SDL_bool SDL_RenderGetIntegerScale(struct SDL_Renderer* renderer);
     * }
     */
    public static int SDL_RenderGetIntegerScale(MemorySegment renderer) {
        var mh$ = SDL_RenderGetIntegerScale$MH();
        try {
            return (int)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderSetViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$174.const$3,"SDL_RenderSetViewport");
    }
    /**
     * {@snippet :
     * int SDL_RenderSetViewport(struct SDL_Renderer* renderer, struct SDL_Rect* rect);
     * }
     */
    public static int SDL_RenderSetViewport(MemorySegment renderer, MemorySegment rect) {
        var mh$ = SDL_RenderSetViewport$MH();
        try {
            return (int)mh$.invokeExact(renderer, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGetViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$174.const$4,"SDL_RenderGetViewport");
    }
    /**
     * {@snippet :
     * void SDL_RenderGetViewport(struct SDL_Renderer* renderer, struct SDL_Rect* rect);
     * }
     */
    public static void SDL_RenderGetViewport(MemorySegment renderer, MemorySegment rect) {
        var mh$ = SDL_RenderGetViewport$MH();
        try {
            mh$.invokeExact(renderer, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderSetClipRect$MH() {
        return RuntimeHelper.requireNonNull(constants$174.const$5,"SDL_RenderSetClipRect");
    }
    /**
     * {@snippet :
     * int SDL_RenderSetClipRect(struct SDL_Renderer* renderer, struct SDL_Rect* rect);
     * }
     */
    public static int SDL_RenderSetClipRect(MemorySegment renderer, MemorySegment rect) {
        var mh$ = SDL_RenderSetClipRect$MH();
        try {
            return (int)mh$.invokeExact(renderer, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGetClipRect$MH() {
        return RuntimeHelper.requireNonNull(constants$175.const$0,"SDL_RenderGetClipRect");
    }
    /**
     * {@snippet :
     * void SDL_RenderGetClipRect(struct SDL_Renderer* renderer, struct SDL_Rect* rect);
     * }
     */
    public static void SDL_RenderGetClipRect(MemorySegment renderer, MemorySegment rect) {
        var mh$ = SDL_RenderGetClipRect$MH();
        try {
            mh$.invokeExact(renderer, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderIsClipEnabled$MH() {
        return RuntimeHelper.requireNonNull(constants$175.const$1,"SDL_RenderIsClipEnabled");
    }
    /**
     * {@snippet :
     * enum SDL_bool SDL_RenderIsClipEnabled(struct SDL_Renderer* renderer);
     * }
     */
    public static int SDL_RenderIsClipEnabled(MemorySegment renderer) {
        var mh$ = SDL_RenderIsClipEnabled$MH();
        try {
            return (int)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderSetScale$MH() {
        return RuntimeHelper.requireNonNull(constants$175.const$3,"SDL_RenderSetScale");
    }
    /**
     * {@snippet :
     * int SDL_RenderSetScale(struct SDL_Renderer* renderer, float scaleX, float scaleY);
     * }
     */
    public static int SDL_RenderSetScale(MemorySegment renderer, float scaleX, float scaleY) {
        var mh$ = SDL_RenderSetScale$MH();
        try {
            return (int)mh$.invokeExact(renderer, scaleX, scaleY);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGetScale$MH() {
        return RuntimeHelper.requireNonNull(constants$175.const$4,"SDL_RenderGetScale");
    }
    /**
     * {@snippet :
     * void SDL_RenderGetScale(struct SDL_Renderer* renderer, float* scaleX, float* scaleY);
     * }
     */
    public static void SDL_RenderGetScale(MemorySegment renderer, MemorySegment scaleX, MemorySegment scaleY) {
        var mh$ = SDL_RenderGetScale$MH();
        try {
            mh$.invokeExact(renderer, scaleX, scaleY);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderWindowToLogical$MH() {
        return RuntimeHelper.requireNonNull(constants$175.const$6,"SDL_RenderWindowToLogical");
    }
    /**
     * {@snippet :
     * void SDL_RenderWindowToLogical(struct SDL_Renderer* renderer, int windowX, int windowY, float* logicalX, float* logicalY);
     * }
     */
    public static void SDL_RenderWindowToLogical(MemorySegment renderer, int windowX, int windowY, MemorySegment logicalX, MemorySegment logicalY) {
        var mh$ = SDL_RenderWindowToLogical$MH();
        try {
            mh$.invokeExact(renderer, windowX, windowY, logicalX, logicalY);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderLogicalToWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$176.const$1,"SDL_RenderLogicalToWindow");
    }
    /**
     * {@snippet :
     * void SDL_RenderLogicalToWindow(struct SDL_Renderer* renderer, float logicalX, float logicalY, int* windowX, int* windowY);
     * }
     */
    public static void SDL_RenderLogicalToWindow(MemorySegment renderer, float logicalX, float logicalY, MemorySegment windowX, MemorySegment windowY) {
        var mh$ = SDL_RenderLogicalToWindow$MH();
        try {
            mh$.invokeExact(renderer, logicalX, logicalY, windowX, windowY);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetRenderDrawColor$MH() {
        return RuntimeHelper.requireNonNull(constants$176.const$2,"SDL_SetRenderDrawColor");
    }
    /**
     * {@snippet :
     * int SDL_SetRenderDrawColor(struct SDL_Renderer* renderer, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
     * }
     */
    public static int SDL_SetRenderDrawColor(MemorySegment renderer, byte r, byte g, byte b, byte a) {
        var mh$ = SDL_SetRenderDrawColor$MH();
        try {
            return (int)mh$.invokeExact(renderer, r, g, b, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetRenderDrawColor$MH() {
        return RuntimeHelper.requireNonNull(constants$176.const$3,"SDL_GetRenderDrawColor");
    }
    /**
     * {@snippet :
     * int SDL_GetRenderDrawColor(struct SDL_Renderer* renderer, unsigned char* r, unsigned char* g, unsigned char* b, unsigned char* a);
     * }
     */
    public static int SDL_GetRenderDrawColor(MemorySegment renderer, MemorySegment r, MemorySegment g, MemorySegment b, MemorySegment a) {
        var mh$ = SDL_GetRenderDrawColor$MH();
        try {
            return (int)mh$.invokeExact(renderer, r, g, b, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_SetRenderDrawBlendMode$MH() {
        return RuntimeHelper.requireNonNull(constants$176.const$4,"SDL_SetRenderDrawBlendMode");
    }
    /**
     * {@snippet :
     * int SDL_SetRenderDrawBlendMode(struct SDL_Renderer* renderer, enum SDL_BlendMode blendMode);
     * }
     */
    public static int SDL_SetRenderDrawBlendMode(MemorySegment renderer, int blendMode) {
        var mh$ = SDL_SetRenderDrawBlendMode$MH();
        try {
            return (int)mh$.invokeExact(renderer, blendMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GetRenderDrawBlendMode$MH() {
        return RuntimeHelper.requireNonNull(constants$176.const$5,"SDL_GetRenderDrawBlendMode");
    }
    /**
     * {@snippet :
     * int SDL_GetRenderDrawBlendMode(struct SDL_Renderer* renderer, enum SDL_BlendMode* blendMode);
     * }
     */
    public static int SDL_GetRenderDrawBlendMode(MemorySegment renderer, MemorySegment blendMode) {
        var mh$ = SDL_GetRenderDrawBlendMode$MH();
        try {
            return (int)mh$.invokeExact(renderer, blendMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderClear$MH() {
        return RuntimeHelper.requireNonNull(constants$177.const$0,"SDL_RenderClear");
    }
    /**
     * {@snippet :
     * int SDL_RenderClear(struct SDL_Renderer* renderer);
     * }
     */
    public static int SDL_RenderClear(MemorySegment renderer) {
        var mh$ = SDL_RenderClear$MH();
        try {
            return (int)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$177.const$1,"SDL_RenderDrawPoint");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawPoint(struct SDL_Renderer* renderer, int x, int y);
     * }
     */
    public static int SDL_RenderDrawPoint(MemorySegment renderer, int x, int y) {
        var mh$ = SDL_RenderDrawPoint$MH();
        try {
            return (int)mh$.invokeExact(renderer, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawPoints$MH() {
        return RuntimeHelper.requireNonNull(constants$177.const$2,"SDL_RenderDrawPoints");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawPoints(struct SDL_Renderer* renderer, struct SDL_Point* points, int count);
     * }
     */
    public static int SDL_RenderDrawPoints(MemorySegment renderer, MemorySegment points, int count) {
        var mh$ = SDL_RenderDrawPoints$MH();
        try {
            return (int)mh$.invokeExact(renderer, points, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawLine$MH() {
        return RuntimeHelper.requireNonNull(constants$177.const$3,"SDL_RenderDrawLine");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawLine(struct SDL_Renderer* renderer, int x1, int y1, int x2, int y2);
     * }
     */
    public static int SDL_RenderDrawLine(MemorySegment renderer, int x1, int y1, int x2, int y2) {
        var mh$ = SDL_RenderDrawLine$MH();
        try {
            return (int)mh$.invokeExact(renderer, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawLines$MH() {
        return RuntimeHelper.requireNonNull(constants$177.const$4,"SDL_RenderDrawLines");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawLines(struct SDL_Renderer* renderer, struct SDL_Point* points, int count);
     * }
     */
    public static int SDL_RenderDrawLines(MemorySegment renderer, MemorySegment points, int count) {
        var mh$ = SDL_RenderDrawLines$MH();
        try {
            return (int)mh$.invokeExact(renderer, points, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawRect$MH() {
        return RuntimeHelper.requireNonNull(constants$177.const$5,"SDL_RenderDrawRect");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawRect(struct SDL_Renderer* renderer, struct SDL_Rect* rect);
     * }
     */
    public static int SDL_RenderDrawRect(MemorySegment renderer, MemorySegment rect) {
        var mh$ = SDL_RenderDrawRect$MH();
        try {
            return (int)mh$.invokeExact(renderer, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawRects$MH() {
        return RuntimeHelper.requireNonNull(constants$178.const$0,"SDL_RenderDrawRects");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawRects(struct SDL_Renderer* renderer, struct SDL_Rect* rects, int count);
     * }
     */
    public static int SDL_RenderDrawRects(MemorySegment renderer, MemorySegment rects, int count) {
        var mh$ = SDL_RenderDrawRects$MH();
        try {
            return (int)mh$.invokeExact(renderer, rects, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderFillRect$MH() {
        return RuntimeHelper.requireNonNull(constants$178.const$1,"SDL_RenderFillRect");
    }
    /**
     * {@snippet :
     * int SDL_RenderFillRect(struct SDL_Renderer* renderer, struct SDL_Rect* rect);
     * }
     */
    public static int SDL_RenderFillRect(MemorySegment renderer, MemorySegment rect) {
        var mh$ = SDL_RenderFillRect$MH();
        try {
            return (int)mh$.invokeExact(renderer, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderFillRects$MH() {
        return RuntimeHelper.requireNonNull(constants$178.const$2,"SDL_RenderFillRects");
    }
    /**
     * {@snippet :
     * int SDL_RenderFillRects(struct SDL_Renderer* renderer, struct SDL_Rect* rects, int count);
     * }
     */
    public static int SDL_RenderFillRects(MemorySegment renderer, MemorySegment rects, int count) {
        var mh$ = SDL_RenderFillRects$MH();
        try {
            return (int)mh$.invokeExact(renderer, rects, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$178.const$3,"SDL_RenderCopy");
    }
    /**
     * {@snippet :
     * int SDL_RenderCopy(struct SDL_Renderer* renderer, struct SDL_Texture* texture, struct SDL_Rect* srcrect, struct SDL_Rect* dstrect);
     * }
     */
    public static int SDL_RenderCopy(MemorySegment renderer, MemorySegment texture, MemorySegment srcrect, MemorySegment dstrect) {
        var mh$ = SDL_RenderCopy$MH();
        try {
            return (int)mh$.invokeExact(renderer, texture, srcrect, dstrect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderCopyEx$MH() {
        return RuntimeHelper.requireNonNull(constants$178.const$5,"SDL_RenderCopyEx");
    }
    /**
     * {@snippet :
     * int SDL_RenderCopyEx(struct SDL_Renderer* renderer, struct SDL_Texture* texture, struct SDL_Rect* srcrect, struct SDL_Rect* dstrect, double angle, struct SDL_Point* center, enum SDL_RendererFlip flip);
     * }
     */
    public static int SDL_RenderCopyEx(MemorySegment renderer, MemorySegment texture, MemorySegment srcrect, MemorySegment dstrect, double angle, MemorySegment center, int flip) {
        var mh$ = SDL_RenderCopyEx$MH();
        try {
            return (int)mh$.invokeExact(renderer, texture, srcrect, dstrect, angle, center, flip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawPointF$MH() {
        return RuntimeHelper.requireNonNull(constants$179.const$0,"SDL_RenderDrawPointF");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawPointF(struct SDL_Renderer* renderer, float x, float y);
     * }
     */
    public static int SDL_RenderDrawPointF(MemorySegment renderer, float x, float y) {
        var mh$ = SDL_RenderDrawPointF$MH();
        try {
            return (int)mh$.invokeExact(renderer, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawPointsF$MH() {
        return RuntimeHelper.requireNonNull(constants$179.const$1,"SDL_RenderDrawPointsF");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawPointsF(struct SDL_Renderer* renderer, struct SDL_FPoint* points, int count);
     * }
     */
    public static int SDL_RenderDrawPointsF(MemorySegment renderer, MemorySegment points, int count) {
        var mh$ = SDL_RenderDrawPointsF$MH();
        try {
            return (int)mh$.invokeExact(renderer, points, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawLineF$MH() {
        return RuntimeHelper.requireNonNull(constants$179.const$3,"SDL_RenderDrawLineF");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawLineF(struct SDL_Renderer* renderer, float x1, float y1, float x2, float y2);
     * }
     */
    public static int SDL_RenderDrawLineF(MemorySegment renderer, float x1, float y1, float x2, float y2) {
        var mh$ = SDL_RenderDrawLineF$MH();
        try {
            return (int)mh$.invokeExact(renderer, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawLinesF$MH() {
        return RuntimeHelper.requireNonNull(constants$179.const$4,"SDL_RenderDrawLinesF");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawLinesF(struct SDL_Renderer* renderer, struct SDL_FPoint* points, int count);
     * }
     */
    public static int SDL_RenderDrawLinesF(MemorySegment renderer, MemorySegment points, int count) {
        var mh$ = SDL_RenderDrawLinesF$MH();
        try {
            return (int)mh$.invokeExact(renderer, points, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawRectF$MH() {
        return RuntimeHelper.requireNonNull(constants$179.const$5,"SDL_RenderDrawRectF");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawRectF(struct SDL_Renderer* renderer, struct SDL_FRect* rect);
     * }
     */
    public static int SDL_RenderDrawRectF(MemorySegment renderer, MemorySegment rect) {
        var mh$ = SDL_RenderDrawRectF$MH();
        try {
            return (int)mh$.invokeExact(renderer, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderDrawRectsF$MH() {
        return RuntimeHelper.requireNonNull(constants$180.const$0,"SDL_RenderDrawRectsF");
    }
    /**
     * {@snippet :
     * int SDL_RenderDrawRectsF(struct SDL_Renderer* renderer, struct SDL_FRect* rects, int count);
     * }
     */
    public static int SDL_RenderDrawRectsF(MemorySegment renderer, MemorySegment rects, int count) {
        var mh$ = SDL_RenderDrawRectsF$MH();
        try {
            return (int)mh$.invokeExact(renderer, rects, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderFillRectF$MH() {
        return RuntimeHelper.requireNonNull(constants$180.const$1,"SDL_RenderFillRectF");
    }
    /**
     * {@snippet :
     * int SDL_RenderFillRectF(struct SDL_Renderer* renderer, struct SDL_FRect* rect);
     * }
     */
    public static int SDL_RenderFillRectF(MemorySegment renderer, MemorySegment rect) {
        var mh$ = SDL_RenderFillRectF$MH();
        try {
            return (int)mh$.invokeExact(renderer, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderFillRectsF$MH() {
        return RuntimeHelper.requireNonNull(constants$180.const$2,"SDL_RenderFillRectsF");
    }
    /**
     * {@snippet :
     * int SDL_RenderFillRectsF(struct SDL_Renderer* renderer, struct SDL_FRect* rects, int count);
     * }
     */
    public static int SDL_RenderFillRectsF(MemorySegment renderer, MemorySegment rects, int count) {
        var mh$ = SDL_RenderFillRectsF$MH();
        try {
            return (int)mh$.invokeExact(renderer, rects, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderCopyF$MH() {
        return RuntimeHelper.requireNonNull(constants$180.const$3,"SDL_RenderCopyF");
    }
    /**
     * {@snippet :
     * int SDL_RenderCopyF(struct SDL_Renderer* renderer, struct SDL_Texture* texture, struct SDL_Rect* srcrect, struct SDL_FRect* dstrect);
     * }
     */
    public static int SDL_RenderCopyF(MemorySegment renderer, MemorySegment texture, MemorySegment srcrect, MemorySegment dstrect) {
        var mh$ = SDL_RenderCopyF$MH();
        try {
            return (int)mh$.invokeExact(renderer, texture, srcrect, dstrect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderCopyExF$MH() {
        return RuntimeHelper.requireNonNull(constants$180.const$4,"SDL_RenderCopyExF");
    }
    /**
     * {@snippet :
     * int SDL_RenderCopyExF(struct SDL_Renderer* renderer, struct SDL_Texture* texture, struct SDL_Rect* srcrect, struct SDL_FRect* dstrect, double angle, struct SDL_FPoint* center, enum SDL_RendererFlip flip);
     * }
     */
    public static int SDL_RenderCopyExF(MemorySegment renderer, MemorySegment texture, MemorySegment srcrect, MemorySegment dstrect, double angle, MemorySegment center, int flip) {
        var mh$ = SDL_RenderCopyExF$MH();
        try {
            return (int)mh$.invokeExact(renderer, texture, srcrect, dstrect, angle, center, flip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGeometry$MH() {
        return RuntimeHelper.requireNonNull(constants$180.const$5,"SDL_RenderGeometry");
    }
    /**
     * {@snippet :
     * int SDL_RenderGeometry(struct SDL_Renderer* renderer, struct SDL_Texture* texture, struct SDL_Vertex* vertices, int num_vertices, int* indices, int num_indices);
     * }
     */
    public static int SDL_RenderGeometry(MemorySegment renderer, MemorySegment texture, MemorySegment vertices, int num_vertices, MemorySegment indices, int num_indices) {
        var mh$ = SDL_RenderGeometry$MH();
        try {
            return (int)mh$.invokeExact(renderer, texture, vertices, num_vertices, indices, num_indices);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGeometryRaw$MH() {
        return RuntimeHelper.requireNonNull(constants$181.const$1,"SDL_RenderGeometryRaw");
    }
    /**
     * {@snippet :
     * int SDL_RenderGeometryRaw(struct SDL_Renderer* renderer, struct SDL_Texture* texture, float* xy, int xy_stride, struct SDL_Color* color, int color_stride, float* uv, int uv_stride, int num_vertices, void* indices, int num_indices, int size_indices);
     * }
     */
    public static int SDL_RenderGeometryRaw(MemorySegment renderer, MemorySegment texture, MemorySegment xy, int xy_stride, MemorySegment color, int color_stride, MemorySegment uv, int uv_stride, int num_vertices, MemorySegment indices, int num_indices, int size_indices) {
        var mh$ = SDL_RenderGeometryRaw$MH();
        try {
            return (int)mh$.invokeExact(renderer, texture, xy, xy_stride, color, color_stride, uv, uv_stride, num_vertices, indices, num_indices, size_indices);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderReadPixels$MH() {
        return RuntimeHelper.requireNonNull(constants$181.const$3,"SDL_RenderReadPixels");
    }
    /**
     * {@snippet :
     * int SDL_RenderReadPixels(struct SDL_Renderer* renderer, struct SDL_Rect* rect, unsigned int format, void* pixels, int pitch);
     * }
     */
    public static int SDL_RenderReadPixels(MemorySegment renderer, MemorySegment rect, int format, MemorySegment pixels, int pitch) {
        var mh$ = SDL_RenderReadPixels$MH();
        try {
            return (int)mh$.invokeExact(renderer, rect, format, pixels, pitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderPresent$MH() {
        return RuntimeHelper.requireNonNull(constants$181.const$4,"SDL_RenderPresent");
    }
    /**
     * {@snippet :
     * void SDL_RenderPresent(struct SDL_Renderer* renderer);
     * }
     */
    public static void SDL_RenderPresent(MemorySegment renderer) {
        var mh$ = SDL_RenderPresent$MH();
        try {
            mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_DestroyTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$181.const$5,"SDL_DestroyTexture");
    }
    /**
     * {@snippet :
     * void SDL_DestroyTexture(struct SDL_Texture* texture);
     * }
     */
    public static void SDL_DestroyTexture(MemorySegment texture) {
        var mh$ = SDL_DestroyTexture$MH();
        try {
            mh$.invokeExact(texture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_DestroyRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$182.const$0,"SDL_DestroyRenderer");
    }
    /**
     * {@snippet :
     * void SDL_DestroyRenderer(struct SDL_Renderer* renderer);
     * }
     */
    public static void SDL_DestroyRenderer(MemorySegment renderer) {
        var mh$ = SDL_DestroyRenderer$MH();
        try {
            mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderFlush$MH() {
        return RuntimeHelper.requireNonNull(constants$182.const$1,"SDL_RenderFlush");
    }
    /**
     * {@snippet :
     * int SDL_RenderFlush(struct SDL_Renderer* renderer);
     * }
     */
    public static int SDL_RenderFlush(MemorySegment renderer) {
        var mh$ = SDL_RenderFlush$MH();
        try {
            return (int)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GL_BindTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$182.const$2,"SDL_GL_BindTexture");
    }
    /**
     * {@snippet :
     * int SDL_GL_BindTexture(struct SDL_Texture* texture, float* texw, float* texh);
     * }
     */
    public static int SDL_GL_BindTexture(MemorySegment texture, MemorySegment texw, MemorySegment texh) {
        var mh$ = SDL_GL_BindTexture$MH();
        try {
            return (int)mh$.invokeExact(texture, texw, texh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_GL_UnbindTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$182.const$3,"SDL_GL_UnbindTexture");
    }
    /**
     * {@snippet :
     * int SDL_GL_UnbindTexture(struct SDL_Texture* texture);
     * }
     */
    public static int SDL_GL_UnbindTexture(MemorySegment texture) {
        var mh$ = SDL_GL_UnbindTexture$MH();
        try {
            return (int)mh$.invokeExact(texture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGetMetalLayer$MH() {
        return RuntimeHelper.requireNonNull(constants$182.const$4,"SDL_RenderGetMetalLayer");
    }
    /**
     * {@snippet :
     * void* SDL_RenderGetMetalLayer(struct SDL_Renderer* renderer);
     * }
     */
    public static MemorySegment SDL_RenderGetMetalLayer(MemorySegment renderer) {
        var mh$ = SDL_RenderGetMetalLayer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderGetMetalCommandEncoder$MH() {
        return RuntimeHelper.requireNonNull(constants$182.const$5,"SDL_RenderGetMetalCommandEncoder");
    }
    /**
     * {@snippet :
     * void* SDL_RenderGetMetalCommandEncoder(struct SDL_Renderer* renderer);
     * }
     */
    public static MemorySegment SDL_RenderGetMetalCommandEncoder(MemorySegment renderer) {
        var mh$ = SDL_RenderGetMetalCommandEncoder$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_RenderSetVSync$MH() {
        return RuntimeHelper.requireNonNull(constants$183.const$0,"SDL_RenderSetVSync");
    }
    /**
     * {@snippet :
     * int SDL_RenderSetVSync(struct SDL_Renderer* renderer, int vsync);
     * }
     */
    public static int SDL_RenderSetVSync(MemorySegment renderer, int vsync) {
        var mh$ = SDL_RenderSetVSync$MH();
        try {
            return (int)mh$.invokeExact(renderer, vsync);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_Init$MH() {
        return RuntimeHelper.requireNonNull(constants$183.const$1,"SDL_Init");
    }
    /**
     * {@snippet :
     * int SDL_Init(unsigned int flags);
     * }
     */
    public static int SDL_Init(int flags) {
        var mh$ = SDL_Init$MH();
        try {
            return (int)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_InitSubSystem$MH() {
        return RuntimeHelper.requireNonNull(constants$183.const$2,"SDL_InitSubSystem");
    }
    /**
     * {@snippet :
     * int SDL_InitSubSystem(unsigned int flags);
     * }
     */
    public static int SDL_InitSubSystem(int flags) {
        var mh$ = SDL_InitSubSystem$MH();
        try {
            return (int)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_QuitSubSystem$MH() {
        return RuntimeHelper.requireNonNull(constants$183.const$3,"SDL_QuitSubSystem");
    }
    /**
     * {@snippet :
     * void SDL_QuitSubSystem(unsigned int flags);
     * }
     */
    public static void SDL_QuitSubSystem(int flags) {
        var mh$ = SDL_QuitSubSystem$MH();
        try {
            mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_WasInit$MH() {
        return RuntimeHelper.requireNonNull(constants$183.const$4,"SDL_WasInit");
    }
    /**
     * {@snippet :
     * unsigned int SDL_WasInit(unsigned int flags);
     * }
     */
    public static int SDL_WasInit(int flags) {
        var mh$ = SDL_WasInit$MH();
        try {
            return (int)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SDL_Quit$MH() {
        return RuntimeHelper.requireNonNull(constants$183.const$5,"SDL_Quit");
    }
    /**
     * {@snippet :
     * void SDL_Quit();
     * }
     */
    public static void SDL_Quit() {
        var mh$ = SDL_Quit$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define WINAPI_FAMILY_WINRT 0
     * }
     */
    public static int WINAPI_FAMILY_WINRT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SDL_SIZE_MAX -1
     * }
     */
    public static long SDL_SIZE_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define SDL_MAX_SINT8 127
     * }
     */
    public static byte SDL_MAX_SINT8() {
        return (byte)127L;
    }
    /**
     * {@snippet :
     * #define SDL_MIN_SINT8 -128
     * }
     */
    public static byte SDL_MIN_SINT8() {
        return (byte)-128L;
    }
    /**
     * {@snippet :
     * #define SDL_MAX_UINT8 255
     * }
     */
    public static byte SDL_MAX_UINT8() {
        return (byte)255L;
    }
    /**
     * {@snippet :
     * #define SDL_MIN_UINT8 0
     * }
     */
    public static byte SDL_MIN_UINT8() {
        return (byte)0L;
    }
    /**
     * {@snippet :
     * #define SDL_MAX_SINT16 32767
     * }
     */
    public static short SDL_MAX_SINT16() {
        return (short)32767L;
    }
    /**
     * {@snippet :
     * #define SDL_MIN_SINT16 -32768
     * }
     */
    public static short SDL_MIN_SINT16() {
        return (short)-32768L;
    }
    /**
     * {@snippet :
     * #define SDL_MAX_UINT16 65535
     * }
     */
    public static short SDL_MAX_UINT16() {
        return (short)65535L;
    }
    /**
     * {@snippet :
     * #define SDL_MIN_UINT16 0
     * }
     */
    public static short SDL_MIN_UINT16() {
        return (short)0L;
    }
    /**
     * {@snippet :
     * #define SDL_MAX_SINT32 2147483647
     * }
     */
    public static int SDL_MAX_SINT32() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define SDL_MIN_SINT32 -2147483648
     * }
     */
    public static int SDL_MIN_SINT32() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define SDL_MAX_UINT32 4294967295
     * }
     */
    public static int SDL_MAX_UINT32() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define SDL_MIN_UINT32 0
     * }
     */
    public static int SDL_MIN_UINT32() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SDL_MAX_SINT64 9223372036854775807
     * }
     */
    public static long SDL_MAX_SINT64() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define SDL_MIN_SINT64 -9223372036854775808
     * }
     */
    public static long SDL_MIN_SINT64() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define SDL_MAX_UINT64 -1
     * }
     */
    public static long SDL_MAX_UINT64() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define SDL_MIN_UINT64 0
     * }
     */
    public static long SDL_MIN_UINT64() {
        return 0L;
    }
    /**
     * {@snippet :
     * #define SDL_FLT_EPSILON 1.1920928955078125E-7
     * }
     */
    public static float SDL_FLT_EPSILON() {
        return 1.1920928955078125E-7f;
    }
    /**
     * {@snippet :
     * #define SDL_PRIs64 "I64d"
     * }
     */
    public static MemorySegment SDL_PRIs64() {
        return constants$184.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_PRIu64 "I64u"
     * }
     */
    public static MemorySegment SDL_PRIu64() {
        return constants$184.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_PRIx64 "I64x"
     * }
     */
    public static MemorySegment SDL_PRIx64() {
        return constants$184.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_PRIX64 "I64X"
     * }
     */
    public static MemorySegment SDL_PRIX64() {
        return constants$184.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_PRIs32 "d"
     * }
     */
    public static MemorySegment SDL_PRIs32() {
        return constants$184.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_PRIu32 "u"
     * }
     */
    public static MemorySegment SDL_PRIu32() {
        return constants$184.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_PRIx32 "x"
     * }
     */
    public static MemorySegment SDL_PRIx32() {
        return constants$185.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_PRIX32 "X"
     * }
     */
    public static MemorySegment SDL_PRIX32() {
        return constants$185.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_ICONV_ERROR -1
     * }
     */
    public static long SDL_ICONV_ERROR() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define SDL_ICONV_E2BIG -2
     * }
     */
    public static long SDL_ICONV_E2BIG() {
        return -2L;
    }
    /**
     * {@snippet :
     * #define SDL_ICONV_EILSEQ -3
     * }
     */
    public static long SDL_ICONV_EILSEQ() {
        return -3L;
    }
    /**
     * {@snippet :
     * #define SDL_ICONV_EINVAL -4
     * }
     */
    public static long SDL_ICONV_EINVAL() {
        return -4L;
    }
    /**
     * {@snippet :
     * #define SDL_MUTEX_MAXWAIT 4294967295
     * }
     */
    public static int SDL_MUTEX_MAXWAIT() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define SDL_RWOPS_UNKNOWN 0
     * }
     */
    public static int SDL_RWOPS_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SDL_RWOPS_WINFILE 1
     * }
     */
    public static int SDL_RWOPS_WINFILE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SDL_RWOPS_STDFILE 2
     * }
     */
    public static int SDL_RWOPS_STDFILE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SDL_RWOPS_JNIFILE 3
     * }
     */
    public static int SDL_RWOPS_JNIFILE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define SDL_RWOPS_MEMORY 4
     * }
     */
    public static int SDL_RWOPS_MEMORY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SDL_RWOPS_MEMORY_RO 5
     * }
     */
    public static int SDL_RWOPS_MEMORY_RO() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define SDL_WINDOWPOS_UNDEFINED_MASK 536805376
     * }
     */
    public static int SDL_WINDOWPOS_UNDEFINED_MASK() {
        return (int)536805376L;
    }
    /**
     * {@snippet :
     * #define SDL_WINDOWPOS_UNDEFINED 536805376
     * }
     */
    public static int SDL_WINDOWPOS_UNDEFINED() {
        return (int)536805376L;
    }
    /**
     * {@snippet :
     * #define SDL_WINDOWPOS_CENTERED_MASK 805240832
     * }
     */
    public static int SDL_WINDOWPOS_CENTERED_MASK() {
        return (int)805240832L;
    }
    /**
     * {@snippet :
     * #define SDL_WINDOWPOS_CENTERED 805240832
     * }
     */
    public static int SDL_WINDOWPOS_CENTERED() {
        return (int)805240832L;
    }
    /**
     * {@snippet :
     * #define SDL_IPHONE_MAX_GFORCE 5.0
     * }
     */
    public static double SDL_IPHONE_MAX_GFORCE() {
        return 5.0d;
    }
    /**
     * {@snippet :
     * #define SDL_JOYSTICK_AXIS_MIN -32768
     * }
     */
    public static int SDL_JOYSTICK_AXIS_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define SDL_HAT_RIGHTUP 3
     * }
     */
    public static int SDL_HAT_RIGHTUP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define SDL_HAT_RIGHTDOWN 6
     * }
     */
    public static int SDL_HAT_RIGHTDOWN() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define SDL_HAT_LEFTUP 9
     * }
     */
    public static int SDL_HAT_LEFTUP() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define SDL_HAT_LEFTDOWN 12
     * }
     */
    public static int SDL_HAT_LEFTDOWN() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define SDL_STANDARD_GRAVITY 9.806650161743164
     * }
     */
    public static float SDL_STANDARD_GRAVITY() {
        return 9.806650161743164f;
    }
    /**
     * {@snippet :
     * #define SDL_TEXTEDITINGEVENT_TEXT_SIZE 32
     * }
     */
    public static int SDL_TEXTEDITINGEVENT_TEXT_SIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define SDL_TEXTINPUTEVENT_TEXT_SIZE 32
     * }
     */
    public static int SDL_TEXTINPUTEVENT_TEXT_SIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define SDL_QUERY -1
     * }
     */
    public static int SDL_QUERY() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ACCELEROMETER_AS_JOYSTICK "SDL_ACCELEROMETER_AS_JOYSTICK"
     * }
     */
    public static MemorySegment SDL_HINT_ACCELEROMETER_AS_JOYSTICK() {
        return constants$185.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED "SDL_ALLOW_ALT_TAB_WHILE_GRABBED"
     * }
     */
    public static MemorySegment SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED() {
        return constants$185.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ALLOW_TOPMOST "SDL_ALLOW_TOPMOST"
     * }
     */
    public static MemorySegment SDL_HINT_ALLOW_TOPMOST() {
        return constants$185.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION "SDL_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION"
     * }
     */
    public static MemorySegment SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION() {
        return constants$185.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION "SDL_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION"
     * }
     */
    public static MemorySegment SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION() {
        return constants$186.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ANDROID_BLOCK_ON_PAUSE "SDL_ANDROID_BLOCK_ON_PAUSE"
     * }
     */
    public static MemorySegment SDL_HINT_ANDROID_BLOCK_ON_PAUSE() {
        return constants$186.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO "SDL_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO"
     * }
     */
    public static MemorySegment SDL_HINT_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO() {
        return constants$186.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ANDROID_TRAP_BACK_BUTTON "SDL_ANDROID_TRAP_BACK_BUTTON"
     * }
     */
    public static MemorySegment SDL_HINT_ANDROID_TRAP_BACK_BUTTON() {
        return constants$186.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_APP_NAME "SDL_APP_NAME"
     * }
     */
    public static MemorySegment SDL_HINT_APP_NAME() {
        return constants$186.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS "SDL_APPLE_TV_CONTROLLER_UI_EVENTS"
     * }
     */
    public static MemorySegment SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS() {
        return constants$186.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION"
     * }
     */
    public static MemorySegment SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION() {
        return constants$187.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_AUDIO_CATEGORY "SDL_AUDIO_CATEGORY"
     * }
     */
    public static MemorySegment SDL_HINT_AUDIO_CATEGORY() {
        return constants$187.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_AUDIO_DEVICE_APP_NAME "SDL_AUDIO_DEVICE_APP_NAME"
     * }
     */
    public static MemorySegment SDL_HINT_AUDIO_DEVICE_APP_NAME() {
        return constants$187.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_AUDIO_DEVICE_STREAM_NAME "SDL_AUDIO_DEVICE_STREAM_NAME"
     * }
     */
    public static MemorySegment SDL_HINT_AUDIO_DEVICE_STREAM_NAME() {
        return constants$187.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_AUDIO_DEVICE_STREAM_ROLE "SDL_AUDIO_DEVICE_STREAM_ROLE"
     * }
     */
    public static MemorySegment SDL_HINT_AUDIO_DEVICE_STREAM_ROLE() {
        return constants$187.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_AUDIO_RESAMPLING_MODE "SDL_AUDIO_RESAMPLING_MODE"
     * }
     */
    public static MemorySegment SDL_HINT_AUDIO_RESAMPLING_MODE() {
        return constants$187.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_AUTO_UPDATE_JOYSTICKS "SDL_AUTO_UPDATE_JOYSTICKS"
     * }
     */
    public static MemorySegment SDL_HINT_AUTO_UPDATE_JOYSTICKS() {
        return constants$188.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_AUTO_UPDATE_SENSORS "SDL_AUTO_UPDATE_SENSORS"
     * }
     */
    public static MemorySegment SDL_HINT_AUTO_UPDATE_SENSORS() {
        return constants$188.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_BMP_SAVE_LEGACY_FORMAT "SDL_BMP_SAVE_LEGACY_FORMAT"
     * }
     */
    public static MemorySegment SDL_HINT_BMP_SAVE_LEGACY_FORMAT() {
        return constants$188.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_DISPLAY_USABLE_BOUNDS "SDL_DISPLAY_USABLE_BOUNDS"
     * }
     */
    public static MemorySegment SDL_HINT_DISPLAY_USABLE_BOUNDS() {
        return constants$188.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_EMSCRIPTEN_ASYNCIFY "SDL_EMSCRIPTEN_ASYNCIFY"
     * }
     */
    public static MemorySegment SDL_HINT_EMSCRIPTEN_ASYNCIFY() {
        return constants$188.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT"
     * }
     */
    public static MemorySegment SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT() {
        return constants$188.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ENABLE_SCREEN_KEYBOARD "SDL_ENABLE_SCREEN_KEYBOARD"
     * }
     */
    public static MemorySegment SDL_HINT_ENABLE_SCREEN_KEYBOARD() {
        return constants$189.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ENABLE_STEAM_CONTROLLERS "SDL_ENABLE_STEAM_CONTROLLERS"
     * }
     */
    public static MemorySegment SDL_HINT_ENABLE_STEAM_CONTROLLERS() {
        return constants$189.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_EVENT_LOGGING "SDL_EVENT_LOGGING"
     * }
     */
    public static MemorySegment SDL_HINT_EVENT_LOGGING() {
        return constants$189.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_FORCE_RAISEWINDOW "SDL_HINT_FORCE_RAISEWINDOW"
     * }
     */
    public static MemorySegment SDL_HINT_FORCE_RAISEWINDOW() {
        return constants$189.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_FRAMEBUFFER_ACCELERATION "SDL_FRAMEBUFFER_ACCELERATION"
     * }
     */
    public static MemorySegment SDL_HINT_FRAMEBUFFER_ACCELERATION() {
        return constants$189.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_GAMECONTROLLERCONFIG "SDL_GAMECONTROLLERCONFIG"
     * }
     */
    public static MemorySegment SDL_HINT_GAMECONTROLLERCONFIG() {
        return constants$189.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_GAMECONTROLLERCONFIG_FILE "SDL_GAMECONTROLLERCONFIG_FILE"
     * }
     */
    public static MemorySegment SDL_HINT_GAMECONTROLLERCONFIG_FILE() {
        return constants$190.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_GAMECONTROLLERTYPE "SDL_GAMECONTROLLERTYPE"
     * }
     */
    public static MemorySegment SDL_HINT_GAMECONTROLLERTYPE() {
        return constants$190.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES "SDL_GAMECONTROLLER_IGNORE_DEVICES"
     * }
     */
    public static MemorySegment SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES() {
        return constants$190.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT"
     * }
     */
    public static MemorySegment SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT() {
        return constants$190.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS "SDL_GAMECONTROLLER_USE_BUTTON_LABELS"
     * }
     */
    public static MemorySegment SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS() {
        return constants$190.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_GRAB_KEYBOARD "SDL_GRAB_KEYBOARD"
     * }
     */
    public static MemorySegment SDL_HINT_GRAB_KEYBOARD() {
        return constants$190.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_HIDAPI_IGNORE_DEVICES "SDL_HIDAPI_IGNORE_DEVICES"
     * }
     */
    public static MemorySegment SDL_HINT_HIDAPI_IGNORE_DEVICES() {
        return constants$191.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_IDLE_TIMER_DISABLED "SDL_IOS_IDLE_TIMER_DISABLED"
     * }
     */
    public static MemorySegment SDL_HINT_IDLE_TIMER_DISABLED() {
        return constants$191.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_IME_INTERNAL_EDITING "SDL_IME_INTERNAL_EDITING"
     * }
     */
    public static MemorySegment SDL_HINT_IME_INTERNAL_EDITING() {
        return constants$191.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_IME_SHOW_UI "SDL_IME_SHOW_UI"
     * }
     */
    public static MemorySegment SDL_HINT_IME_SHOW_UI() {
        return constants$191.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_IME_SUPPORT_EXTENDED_TEXT "SDL_IME_SUPPORT_EXTENDED_TEXT"
     * }
     */
    public static MemorySegment SDL_HINT_IME_SUPPORT_EXTENDED_TEXT() {
        return constants$191.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_IOS_HIDE_HOME_INDICATOR "SDL_IOS_HIDE_HOME_INDICATOR"
     * }
     */
    public static MemorySegment SDL_HINT_IOS_HIDE_HOME_INDICATOR() {
        return constants$191.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS() {
        return constants$192.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI "SDL_JOYSTICK_HIDAPI"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI() {
        return constants$192.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE "SDL_JOYSTICK_HIDAPI_GAMECUBE"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE() {
        return constants$192.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_GAMECUBE_RUMBLE_BRAKE "SDL_JOYSTICK_GAMECUBE_RUMBLE_BRAKE"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_GAMECUBE_RUMBLE_BRAKE() {
        return constants$192.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_JOY_CONS "SDL_JOYSTICK_HIDAPI_JOY_CONS"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_JOY_CONS() {
        return constants$192.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS() {
        return constants$192.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS "SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS() {
        return constants$193.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_LUNA "SDL_JOYSTICK_HIDAPI_LUNA"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_LUNA() {
        return constants$193.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC() {
        return constants$193.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_SHIELD "SDL_JOYSTICK_HIDAPI_SHIELD"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_SHIELD() {
        return constants$193.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_PS3 "SDL_JOYSTICK_HIDAPI_PS3"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_PS3() {
        return constants$193.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_PS4 "SDL_JOYSTICK_HIDAPI_PS4"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_PS4() {
        return constants$193.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE() {
        return constants$194.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_PS5 "SDL_JOYSTICK_HIDAPI_PS5"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_PS5() {
        return constants$194.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED() {
        return constants$194.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_PS5_RUMBLE "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_PS5_RUMBLE() {
        return constants$194.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_STADIA "SDL_JOYSTICK_HIDAPI_STADIA"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_STADIA() {
        return constants$194.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_STEAM "SDL_JOYSTICK_HIDAPI_STEAM"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_STEAM() {
        return constants$194.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_SWITCH "SDL_JOYSTICK_HIDAPI_SWITCH"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_SWITCH() {
        return constants$195.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED() {
        return constants$195.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED() {
        return constants$195.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED() {
        return constants$195.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_WII "SDL_JOYSTICK_HIDAPI_WII"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_WII() {
        return constants$195.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED "SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED() {
        return constants$195.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_XBOX "SDL_JOYSTICK_HIDAPI_XBOX"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_XBOX() {
        return constants$196.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_XBOX_360 "SDL_JOYSTICK_HIDAPI_XBOX_360"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_XBOX_360() {
        return constants$196.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED "SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED() {
        return constants$196.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS "SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS() {
        return constants$196.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE "SDL_JOYSTICK_HIDAPI_XBOX_ONE"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE() {
        return constants$196.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED "SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED() {
        return constants$196.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_RAWINPUT "SDL_JOYSTICK_RAWINPUT"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_RAWINPUT() {
        return constants$197.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT() {
        return constants$197.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_ROG_CHAKRAM "SDL_JOYSTICK_ROG_CHAKRAM"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_ROG_CHAKRAM() {
        return constants$197.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_THREAD "SDL_JOYSTICK_THREAD"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_THREAD() {
        return constants$197.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_WGI "SDL_JOYSTICK_WGI"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_WGI() {
        return constants$197.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_KMSDRM_REQUIRE_DRM_MASTER "SDL_KMSDRM_REQUIRE_DRM_MASTER"
     * }
     */
    public static MemorySegment SDL_HINT_KMSDRM_REQUIRE_DRM_MASTER() {
        return constants$197.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_JOYSTICK_DEVICE "SDL_JOYSTICK_DEVICE"
     * }
     */
    public static MemorySegment SDL_HINT_JOYSTICK_DEVICE() {
        return constants$198.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_LINUX_DIGITAL_HATS "SDL_LINUX_DIGITAL_HATS"
     * }
     */
    public static MemorySegment SDL_HINT_LINUX_DIGITAL_HATS() {
        return constants$198.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_LINUX_HAT_DEADZONES "SDL_LINUX_HAT_DEADZONES"
     * }
     */
    public static MemorySegment SDL_HINT_LINUX_HAT_DEADZONES() {
        return constants$198.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_LINUX_JOYSTICK_CLASSIC "SDL_LINUX_JOYSTICK_CLASSIC"
     * }
     */
    public static MemorySegment SDL_HINT_LINUX_JOYSTICK_CLASSIC() {
        return constants$198.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_LINUX_JOYSTICK_DEADZONES "SDL_LINUX_JOYSTICK_DEADZONES"
     * }
     */
    public static MemorySegment SDL_HINT_LINUX_JOYSTICK_DEADZONES() {
        return constants$198.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MAC_BACKGROUND_APP "SDL_MAC_BACKGROUND_APP"
     * }
     */
    public static MemorySegment SDL_HINT_MAC_BACKGROUND_APP() {
        return constants$198.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK"
     * }
     */
    public static MemorySegment SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK() {
        return constants$199.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MAC_OPENGL_ASYNC_DISPATCH "SDL_MAC_OPENGL_ASYNC_DISPATCH"
     * }
     */
    public static MemorySegment SDL_HINT_MAC_OPENGL_ASYNC_DISPATCH() {
        return constants$199.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS "SDL_MOUSE_DOUBLE_CLICK_RADIUS"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS() {
        return constants$199.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_DOUBLE_CLICK_TIME "SDL_MOUSE_DOUBLE_CLICK_TIME"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_DOUBLE_CLICK_TIME() {
        return constants$199.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH "SDL_MOUSE_FOCUS_CLICKTHROUGH"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH() {
        return constants$199.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_NORMAL_SPEED_SCALE "SDL_MOUSE_NORMAL_SPEED_SCALE"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_NORMAL_SPEED_SCALE() {
        return constants$199.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_RELATIVE_MODE_CENTER "SDL_MOUSE_RELATIVE_MODE_CENTER"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_RELATIVE_MODE_CENTER() {
        return constants$200.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_RELATIVE_MODE_WARP "SDL_MOUSE_RELATIVE_MODE_WARP"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_RELATIVE_MODE_WARP() {
        return constants$200.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_RELATIVE_SCALING "SDL_MOUSE_RELATIVE_SCALING"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_RELATIVE_SCALING() {
        return constants$200.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE "SDL_MOUSE_RELATIVE_SPEED_SCALE"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE() {
        return constants$200.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_RELATIVE_SYSTEM_SCALE "SDL_MOUSE_RELATIVE_SYSTEM_SCALE"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_RELATIVE_SYSTEM_SCALE() {
        return constants$200.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_RELATIVE_WARP_MOTION "SDL_MOUSE_RELATIVE_WARP_MOTION"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_RELATIVE_WARP_MOTION() {
        return constants$200.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_TOUCH_EVENTS "SDL_MOUSE_TOUCH_EVENTS"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_TOUCH_EVENTS() {
        return constants$201.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_MOUSE_AUTO_CAPTURE "SDL_MOUSE_AUTO_CAPTURE"
     * }
     */
    public static MemorySegment SDL_HINT_MOUSE_AUTO_CAPTURE() {
        return constants$201.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_NO_SIGNAL_HANDLERS "SDL_NO_SIGNAL_HANDLERS"
     * }
     */
    public static MemorySegment SDL_HINT_NO_SIGNAL_HANDLERS() {
        return constants$201.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_OPENGL_ES_DRIVER "SDL_OPENGL_ES_DRIVER"
     * }
     */
    public static MemorySegment SDL_HINT_OPENGL_ES_DRIVER() {
        return constants$201.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_ORIENTATIONS "SDL_IOS_ORIENTATIONS"
     * }
     */
    public static MemorySegment SDL_HINT_ORIENTATIONS() {
        return constants$201.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_POLL_SENTINEL "SDL_POLL_SENTINEL"
     * }
     */
    public static MemorySegment SDL_HINT_POLL_SENTINEL() {
        return constants$201.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_PREFERRED_LOCALES "SDL_PREFERRED_LOCALES"
     * }
     */
    public static MemorySegment SDL_HINT_PREFERRED_LOCALES() {
        return constants$202.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION "SDL_QTWAYLAND_CONTENT_ORIENTATION"
     * }
     */
    public static MemorySegment SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION() {
        return constants$202.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_QTWAYLAND_WINDOW_FLAGS "SDL_QTWAYLAND_WINDOW_FLAGS"
     * }
     */
    public static MemorySegment SDL_HINT_QTWAYLAND_WINDOW_FLAGS() {
        return constants$202.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_BATCHING "SDL_RENDER_BATCHING"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_BATCHING() {
        return constants$202.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_LINE_METHOD "SDL_RENDER_LINE_METHOD"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_LINE_METHOD() {
        return constants$202.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_DIRECT3D11_DEBUG "SDL_RENDER_DIRECT3D11_DEBUG"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_DIRECT3D11_DEBUG() {
        return constants$202.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_DIRECT3D_THREADSAFE "SDL_RENDER_DIRECT3D_THREADSAFE"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_DIRECT3D_THREADSAFE() {
        return constants$203.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_DRIVER "SDL_RENDER_DRIVER"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_DRIVER() {
        return constants$203.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_LOGICAL_SIZE_MODE "SDL_RENDER_LOGICAL_SIZE_MODE"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_LOGICAL_SIZE_MODE() {
        return constants$203.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_OPENGL_SHADERS "SDL_RENDER_OPENGL_SHADERS"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_OPENGL_SHADERS() {
        return constants$203.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_SCALE_QUALITY "SDL_RENDER_SCALE_QUALITY"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_SCALE_QUALITY() {
        return constants$203.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_VSYNC "SDL_RENDER_VSYNC"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_VSYNC() {
        return constants$203.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE "SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE"
     * }
     */
    public static MemorySegment SDL_HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE() {
        return constants$204.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_PS2_DYNAMIC_VSYNC "SDL_PS2_DYNAMIC_VSYNC"
     * }
     */
    public static MemorySegment SDL_HINT_PS2_DYNAMIC_VSYNC() {
        return constants$204.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RETURN_KEY_HIDES_IME "SDL_RETURN_KEY_HIDES_IME"
     * }
     */
    public static MemorySegment SDL_HINT_RETURN_KEY_HIDES_IME() {
        return constants$204.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_RPI_VIDEO_LAYER "SDL_RPI_VIDEO_LAYER"
     * }
     */
    public static MemorySegment SDL_HINT_RPI_VIDEO_LAYER() {
        return constants$204.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME"
     * }
     */
    public static MemorySegment SDL_HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME() {
        return constants$204.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL"
     * }
     */
    public static MemorySegment SDL_HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL() {
        return constants$204.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_THREAD_PRIORITY_POLICY "SDL_THREAD_PRIORITY_POLICY"
     * }
     */
    public static MemorySegment SDL_HINT_THREAD_PRIORITY_POLICY() {
        return constants$205.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_THREAD_STACK_SIZE "SDL_THREAD_STACK_SIZE"
     * }
     */
    public static MemorySegment SDL_HINT_THREAD_STACK_SIZE() {
        return constants$205.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_TIMER_RESOLUTION "SDL_TIMER_RESOLUTION"
     * }
     */
    public static MemorySegment SDL_HINT_TIMER_RESOLUTION() {
        return constants$205.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_TOUCH_MOUSE_EVENTS "SDL_TOUCH_MOUSE_EVENTS"
     * }
     */
    public static MemorySegment SDL_HINT_TOUCH_MOUSE_EVENTS() {
        return constants$205.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VITA_TOUCH_MOUSE_DEVICE "SDL_HINT_VITA_TOUCH_MOUSE_DEVICE"
     * }
     */
    public static MemorySegment SDL_HINT_VITA_TOUCH_MOUSE_DEVICE() {
        return constants$205.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_TV_REMOTE_AS_JOYSTICK "SDL_TV_REMOTE_AS_JOYSTICK"
     * }
     */
    public static MemorySegment SDL_HINT_TV_REMOTE_AS_JOYSTICK() {
        return constants$205.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_ALLOW_SCREENSAVER "SDL_VIDEO_ALLOW_SCREENSAVER"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_ALLOW_SCREENSAVER() {
        return constants$206.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_DOUBLE_BUFFER "SDL_VIDEO_DOUBLE_BUFFER"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_DOUBLE_BUFFER() {
        return constants$206.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_EGL_ALLOW_TRANSPARENCY "SDL_VIDEO_EGL_ALLOW_TRANSPARENCY"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_EGL_ALLOW_TRANSPARENCY() {
        return constants$206.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_EXTERNAL_CONTEXT "SDL_VIDEO_EXTERNAL_CONTEXT"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_EXTERNAL_CONTEXT() {
        return constants$206.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_HIGHDPI_DISABLED "SDL_VIDEO_HIGHDPI_DISABLED"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_HIGHDPI_DISABLED() {
        return constants$206.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES "SDL_VIDEO_MAC_FULLSCREEN_SPACES"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES() {
        return constants$206.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS() {
        return constants$207.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR() {
        return constants$207.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_WAYLAND_PREFER_LIBDECOR "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_WAYLAND_PREFER_LIBDECOR() {
        return constants$207.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_WAYLAND_MODE_EMULATION "SDL_VIDEO_WAYLAND_MODE_EMULATION"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_WAYLAND_MODE_EMULATION() {
        return constants$207.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_WAYLAND_EMULATE_MOUSE_WARP "SDL_VIDEO_WAYLAND_EMULATE_MOUSE_WARP"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_WAYLAND_EMULATE_MOUSE_WARP() {
        return constants$207.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT "SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT() {
        return constants$207.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_FOREIGN_WINDOW_OPENGL "SDL_VIDEO_FOREIGN_WINDOW_OPENGL"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_FOREIGN_WINDOW_OPENGL() {
        return constants$208.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_FOREIGN_WINDOW_VULKAN "SDL_VIDEO_FOREIGN_WINDOW_VULKAN"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_FOREIGN_WINDOW_VULKAN() {
        return constants$208.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_WIN_D3DCOMPILER "SDL_VIDEO_WIN_D3DCOMPILER"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_WIN_D3DCOMPILER() {
        return constants$208.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_X11_FORCE_EGL "SDL_VIDEO_X11_FORCE_EGL"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_X11_FORCE_EGL() {
        return constants$208.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR() {
        return constants$208.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_X11_NET_WM_PING "SDL_VIDEO_X11_NET_WM_PING"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_X11_NET_WM_PING() {
        return constants$208.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_X11_WINDOW_VISUALID "SDL_VIDEO_X11_WINDOW_VISUALID"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_X11_WINDOW_VISUALID() {
        return constants$209.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_X11_XINERAMA "SDL_VIDEO_X11_XINERAMA"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_X11_XINERAMA() {
        return constants$209.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_X11_XRANDR "SDL_VIDEO_X11_XRANDR"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_X11_XRANDR() {
        return constants$209.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEO_X11_XVIDMODE "SDL_VIDEO_X11_XVIDMODE"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEO_X11_XVIDMODE() {
        return constants$209.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WAVE_FACT_CHUNK "SDL_WAVE_FACT_CHUNK"
     * }
     */
    public static MemorySegment SDL_HINT_WAVE_FACT_CHUNK() {
        return constants$209.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WAVE_RIFF_CHUNK_SIZE "SDL_WAVE_RIFF_CHUNK_SIZE"
     * }
     */
    public static MemorySegment SDL_HINT_WAVE_RIFF_CHUNK_SIZE() {
        return constants$209.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WAVE_TRUNCATION "SDL_WAVE_TRUNCATION"
     * }
     */
    public static MemorySegment SDL_HINT_WAVE_TRUNCATION() {
        return constants$210.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING "SDL_WINDOWS_DISABLE_THREAD_NAMING"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING() {
        return constants$210.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_ENABLE_MENU_MNEMONICS "SDL_WINDOWS_ENABLE_MENU_MNEMONICS"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_ENABLE_MENU_MNEMONICS() {
        return constants$210.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP "SDL_WINDOWS_ENABLE_MESSAGELOOP"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP() {
        return constants$210.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS "SDL_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS() {
        return constants$210.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL() {
        return constants$210.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_INTRESOURCE_ICON "SDL_WINDOWS_INTRESOURCE_ICON"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_INTRESOURCE_ICON() {
        return constants$211.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL "SDL_WINDOWS_INTRESOURCE_ICON_SMALL"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL() {
        return constants$211.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4 "SDL_WINDOWS_NO_CLOSE_ON_ALT_F4"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4() {
        return constants$211.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_USE_D3D9EX "SDL_WINDOWS_USE_D3D9EX"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_USE_D3D9EX() {
        return constants$211.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_DPI_AWARENESS "SDL_WINDOWS_DPI_AWARENESS"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_DPI_AWARENESS() {
        return constants$211.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOWS_DPI_SCALING "SDL_WINDOWS_DPI_SCALING"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOWS_DPI_SCALING() {
        return constants$211.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN() {
        return constants$212.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINDOW_NO_ACTIVATION_WHEN_SHOWN "SDL_WINDOW_NO_ACTIVATION_WHEN_SHOWN"
     * }
     */
    public static MemorySegment SDL_HINT_WINDOW_NO_ACTIVATION_WHEN_SHOWN() {
        return constants$212.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINRT_HANDLE_BACK_BUTTON "SDL_WINRT_HANDLE_BACK_BUTTON"
     * }
     */
    public static MemorySegment SDL_HINT_WINRT_HANDLE_BACK_BUTTON() {
        return constants$212.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINRT_PRIVACY_POLICY_LABEL "SDL_WINRT_PRIVACY_POLICY_LABEL"
     * }
     */
    public static MemorySegment SDL_HINT_WINRT_PRIVACY_POLICY_LABEL() {
        return constants$212.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_WINRT_PRIVACY_POLICY_URL "SDL_WINRT_PRIVACY_POLICY_URL"
     * }
     */
    public static MemorySegment SDL_HINT_WINRT_PRIVACY_POLICY_URL() {
        return constants$212.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_X11_FORCE_OVERRIDE_REDIRECT "SDL_X11_FORCE_OVERRIDE_REDIRECT"
     * }
     */
    public static MemorySegment SDL_HINT_X11_FORCE_OVERRIDE_REDIRECT() {
        return constants$212.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_XINPUT_ENABLED "SDL_XINPUT_ENABLED"
     * }
     */
    public static MemorySegment SDL_HINT_XINPUT_ENABLED() {
        return constants$213.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_DIRECTINPUT_ENABLED "SDL_DIRECTINPUT_ENABLED"
     * }
     */
    public static MemorySegment SDL_HINT_DIRECTINPUT_ENABLED() {
        return constants$213.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING "SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING"
     * }
     */
    public static MemorySegment SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING() {
        return constants$213.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_AUDIO_INCLUDE_MONITORS "SDL_AUDIO_INCLUDE_MONITORS"
     * }
     */
    public static MemorySegment SDL_HINT_AUDIO_INCLUDE_MONITORS() {
        return constants$213.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_X11_WINDOW_TYPE "SDL_X11_WINDOW_TYPE"
     * }
     */
    public static MemorySegment SDL_HINT_X11_WINDOW_TYPE() {
        return constants$213.const$4;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_QUIT_ON_LAST_WINDOW_CLOSE "SDL_QUIT_ON_LAST_WINDOW_CLOSE"
     * }
     */
    public static MemorySegment SDL_HINT_QUIT_ON_LAST_WINDOW_CLOSE() {
        return constants$213.const$5;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_VIDEODRIVER "SDL_VIDEODRIVER"
     * }
     */
    public static MemorySegment SDL_HINT_VIDEODRIVER() {
        return constants$214.const$0;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_AUDIODRIVER "SDL_AUDIODRIVER"
     * }
     */
    public static MemorySegment SDL_HINT_AUDIODRIVER() {
        return constants$214.const$1;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_KMSDRM_DEVICE_INDEX "SDL_KMSDRM_DEVICE_INDEX"
     * }
     */
    public static MemorySegment SDL_HINT_KMSDRM_DEVICE_INDEX() {
        return constants$214.const$2;
    }
    /**
     * {@snippet :
     * #define SDL_HINT_TRACKPAD_IS_TOUCH_ONLY "SDL_TRACKPAD_IS_TOUCH_ONLY"
     * }
     */
    public static MemorySegment SDL_HINT_TRACKPAD_IS_TOUCH_ONLY() {
        return constants$214.const$3;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_TIMER 1
     * }
     */
    public static int SDL_INIT_TIMER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_AUDIO 16
     * }
     */
    public static int SDL_INIT_AUDIO() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_VIDEO 32
     * }
     */
    public static int SDL_INIT_VIDEO() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_JOYSTICK 512
     * }
     */
    public static int SDL_INIT_JOYSTICK() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_HAPTIC 4096
     * }
     */
    public static int SDL_INIT_HAPTIC() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_GAMECONTROLLER 8192
     * }
     */
    public static int SDL_INIT_GAMECONTROLLER() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_EVENTS 16384
     * }
     */
    public static int SDL_INIT_EVENTS() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_SENSOR 32768
     * }
     */
    public static int SDL_INIT_SENSOR() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_NOPARACHUTE 1048576
     * }
     */
    public static int SDL_INIT_NOPARACHUTE() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * #define SDL_INIT_EVERYTHING 62001
     * }
     */
    public static int SDL_INIT_EVERYTHING() {
        return (int)62001L;
    }
}


