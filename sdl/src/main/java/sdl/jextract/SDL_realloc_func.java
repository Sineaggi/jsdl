// Generated by jextract

package sdl.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void* (*SDL_realloc_func)(void* mem,unsigned long long size);
 * }
 */
public interface SDL_realloc_func {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment mem, long size);
    static MemorySegment allocate(SDL_realloc_func fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$2.const$2, fi, constants$1.const$0, scope);
    }
    static SDL_realloc_func ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _mem, long _size) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$2.const$3.invokeExact(symbol, _mem, _size);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


